// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/common.proto

package protocol

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Role : 用户角色（学生/老师...）
type Role int32

const (
	Role_STUDENT Role = 0
	Role_TEACHER Role = 1
	Role_MANAGER Role = 2
)

var Role_name = map[int32]string{
	0: "STUDENT",
	1: "TEACHER",
	2: "MANAGER",
}

var Role_value = map[string]int32{
	"STUDENT": 0,
	"TEACHER": 1,
	"MANAGER": 2,
}

func (x Role) String() string {
	return proto.EnumName(Role_name, int32(x))
}

func (Role) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{0}
}

// ProblemDifficluty : 题目难度
type ProblemDifficluty int32

const (
	ProblemDifficluty_EASY   ProblemDifficluty = 0
	ProblemDifficluty_MEDIUM ProblemDifficluty = 1
	ProblemDifficluty_HARD   ProblemDifficluty = 2
)

var ProblemDifficluty_name = map[int32]string{
	0: "EASY",
	1: "MEDIUM",
	2: "HARD",
}

var ProblemDifficluty_value = map[string]int32{
	"EASY":   0,
	"MEDIUM": 1,
	"HARD":   2,
}

func (x ProblemDifficluty) String() string {
	return proto.EnumName(ProblemDifficluty_name, int32(x))
}

func (ProblemDifficluty) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{1}
}

// UserInfo : 用户基本信息
type UserInfo struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Role                 Role     `protobuf:"varint,4,opt,name=role,proto3,enum=protocol.Role" json:"role,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Sex                  bool     `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	Phone                string   `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string   `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	School               string   `protobuf:"bytes,9,opt,name=school,proto3" json:"school,omitempty"`
	LastLogin            int64    `protobuf:"varint,10,opt,name=last_login,json=lastLogin,proto3" json:"last_login,omitempty"`
	Create               int64    `protobuf:"varint,11,opt,name=create,proto3" json:"create,omitempty"`
	Account              string   `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Password             string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserInfo) GetRole() Role {
	if m != nil {
		return m.Role
	}
	return Role_STUDENT
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetSex() bool {
	if m != nil {
		return m.Sex
	}
	return false
}

func (m *UserInfo) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetSchool() string {
	if m != nil {
		return m.School
	}
	return ""
}

func (m *UserInfo) GetLastLogin() int64 {
	if m != nil {
		return m.LastLogin
	}
	return 0
}

func (m *UserInfo) GetCreate() int64 {
	if m != nil {
		return m.Create
	}
	return 0
}

func (m *UserInfo) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *UserInfo) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// ProblemExample : 题目输入输出样例
type ProblemExample struct {
	Input                string   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Output               string   `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemExample) Reset()         { *m = ProblemExample{} }
func (m *ProblemExample) String() string { return proto.CompactTextString(m) }
func (*ProblemExample) ProtoMessage()    {}
func (*ProblemExample) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{1}
}

func (m *ProblemExample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemExample.Unmarshal(m, b)
}
func (m *ProblemExample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemExample.Marshal(b, m, deterministic)
}
func (m *ProblemExample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemExample.Merge(m, src)
}
func (m *ProblemExample) XXX_Size() int {
	return xxx_messageInfo_ProblemExample.Size(m)
}
func (m *ProblemExample) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemExample.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemExample proto.InternalMessageInfo

func (m *ProblemExample) GetInput() string {
	if m != nil {
		return m.Input
	}
	return ""
}

func (m *ProblemExample) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

// ProblemJudgeLimit : 判题的限制
type ProblemJudgeLimit struct {
	Time                 string   `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Mem                  string   `protobuf:"bytes,2,opt,name=mem,proto3" json:"mem,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProblemJudgeLimit) Reset()         { *m = ProblemJudgeLimit{} }
func (m *ProblemJudgeLimit) String() string { return proto.CompactTextString(m) }
func (*ProblemJudgeLimit) ProtoMessage()    {}
func (*ProblemJudgeLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{2}
}

func (m *ProblemJudgeLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProblemJudgeLimit.Unmarshal(m, b)
}
func (m *ProblemJudgeLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProblemJudgeLimit.Marshal(b, m, deterministic)
}
func (m *ProblemJudgeLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProblemJudgeLimit.Merge(m, src)
}
func (m *ProblemJudgeLimit) XXX_Size() int {
	return xxx_messageInfo_ProblemJudgeLimit.Size(m)
}
func (m *ProblemJudgeLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_ProblemJudgeLimit.DiscardUnknown(m)
}

var xxx_messageInfo_ProblemJudgeLimit proto.InternalMessageInfo

func (m *ProblemJudgeLimit) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *ProblemJudgeLimit) GetMem() string {
	if m != nil {
		return m.Mem
	}
	return ""
}

// Problem : 题目
type Problem struct {
	Id                   int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string             `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string             `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	In                   string             `protobuf:"bytes,4,opt,name=in,proto3" json:"in,omitempty"`
	Out                  string             `protobuf:"bytes,5,opt,name=out,proto3" json:"out,omitempty"`
	Hint                 string             `protobuf:"bytes,6,opt,name=hint,proto3" json:"hint,omitempty"`
	InOutExamples        []*ProblemExample  `protobuf:"bytes,7,rep,name=in_out_examples,json=inOutExamples,proto3" json:"in_out_examples,omitempty"`
	JudgeLimit           *ProblemJudgeLimit `protobuf:"bytes,8,opt,name=judge_limit,json=judgeLimit,proto3" json:"judge_limit,omitempty"`
	Tags                 []string           `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Difficluty           ProblemDifficluty  `protobuf:"varint,10,opt,name=difficluty,proto3,enum=protocol.ProblemDifficluty" json:"difficluty,omitempty"`
	SubmitTime           int64              `protobuf:"varint,11,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	AcceptTime           int64              `protobuf:"varint,12,opt,name=accept_time,json=acceptTime,proto3" json:"accept_time,omitempty"`
	JudgeInFile          []byte             `protobuf:"bytes,13,opt,name=judge_in_file,json=judgeInFile,proto3" json:"judge_in_file,omitempty"`
	JudgeOutFile         []byte             `protobuf:"bytes,14,opt,name=judge_out_file,json=judgeOutFile,proto3" json:"judge_out_file,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Problem) Reset()         { *m = Problem{} }
func (m *Problem) String() string { return proto.CompactTextString(m) }
func (*Problem) ProtoMessage()    {}
func (*Problem) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{3}
}

func (m *Problem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Problem.Unmarshal(m, b)
}
func (m *Problem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Problem.Marshal(b, m, deterministic)
}
func (m *Problem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Problem.Merge(m, src)
}
func (m *Problem) XXX_Size() int {
	return xxx_messageInfo_Problem.Size(m)
}
func (m *Problem) XXX_DiscardUnknown() {
	xxx_messageInfo_Problem.DiscardUnknown(m)
}

var xxx_messageInfo_Problem proto.InternalMessageInfo

func (m *Problem) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Problem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Problem) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Problem) GetIn() string {
	if m != nil {
		return m.In
	}
	return ""
}

func (m *Problem) GetOut() string {
	if m != nil {
		return m.Out
	}
	return ""
}

func (m *Problem) GetHint() string {
	if m != nil {
		return m.Hint
	}
	return ""
}

func (m *Problem) GetInOutExamples() []*ProblemExample {
	if m != nil {
		return m.InOutExamples
	}
	return nil
}

func (m *Problem) GetJudgeLimit() *ProblemJudgeLimit {
	if m != nil {
		return m.JudgeLimit
	}
	return nil
}

func (m *Problem) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Problem) GetDifficluty() ProblemDifficluty {
	if m != nil {
		return m.Difficluty
	}
	return ProblemDifficluty_EASY
}

func (m *Problem) GetSubmitTime() int64 {
	if m != nil {
		return m.SubmitTime
	}
	return 0
}

func (m *Problem) GetAcceptTime() int64 {
	if m != nil {
		return m.AcceptTime
	}
	return 0
}

func (m *Problem) GetJudgeInFile() []byte {
	if m != nil {
		return m.JudgeInFile
	}
	return nil
}

func (m *Problem) GetJudgeOutFile() []byte {
	if m != nil {
		return m.JudgeOutFile
	}
	return nil
}

// SubmitRecord : 提交情况
type SubmitRecord struct {
	Problem              *Problem `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
	SubmitTime           int64    `protobuf:"varint,2,opt,name=submit_time,json=submitTime,proto3" json:"submit_time,omitempty"`
	IsPass               bool     `protobuf:"varint,3,opt,name=is_pass,json=isPass,proto3" json:"is_pass,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitRecord) Reset()         { *m = SubmitRecord{} }
func (m *SubmitRecord) String() string { return proto.CompactTextString(m) }
func (*SubmitRecord) ProtoMessage()    {}
func (*SubmitRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_1747d3070a2311a0, []int{4}
}

func (m *SubmitRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitRecord.Unmarshal(m, b)
}
func (m *SubmitRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitRecord.Marshal(b, m, deterministic)
}
func (m *SubmitRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitRecord.Merge(m, src)
}
func (m *SubmitRecord) XXX_Size() int {
	return xxx_messageInfo_SubmitRecord.Size(m)
}
func (m *SubmitRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitRecord proto.InternalMessageInfo

func (m *SubmitRecord) GetProblem() *Problem {
	if m != nil {
		return m.Problem
	}
	return nil
}

func (m *SubmitRecord) GetSubmitTime() int64 {
	if m != nil {
		return m.SubmitTime
	}
	return 0
}

func (m *SubmitRecord) GetIsPass() bool {
	if m != nil {
		return m.IsPass
	}
	return false
}

func init() {
	proto.RegisterEnum("protocol.Role", Role_name, Role_value)
	proto.RegisterEnum("protocol.ProblemDifficluty", ProblemDifficluty_name, ProblemDifficluty_value)
	proto.RegisterType((*UserInfo)(nil), "protocol.UserInfo")
	proto.RegisterType((*ProblemExample)(nil), "protocol.ProblemExample")
	proto.RegisterType((*ProblemJudgeLimit)(nil), "protocol.ProblemJudgeLimit")
	proto.RegisterType((*Problem)(nil), "protocol.Problem")
	proto.RegisterType((*SubmitRecord)(nil), "protocol.SubmitRecord")
}

func init() { proto.RegisterFile("proto/common.proto", fileDescriptor_1747d3070a2311a0) }

var fileDescriptor_1747d3070a2311a0 = []byte{
	// 650 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x9d, 0x34, 0x97, 0x71, 0x12, 0xd2, 0x55, 0x05, 0x2b, 0x10, 0xaa, 0x15, 0xf1, 0x10,
	0x15, 0x51, 0xa4, 0xf4, 0x09, 0x15, 0x21, 0x02, 0x09, 0xb4, 0xa8, 0x37, 0x6d, 0xd3, 0x07, 0x78,
	0x89, 0x5c, 0x7b, 0x93, 0x6e, 0x65, 0xef, 0x5a, 0xde, 0xb5, 0x28, 0x1f, 0xc2, 0x1f, 0xf2, 0x21,
	0x68, 0x67, 0x9d, 0x5e, 0x08, 0x4f, 0x99, 0x73, 0x7c, 0x66, 0x76, 0xe6, 0xcc, 0x04, 0x48, 0x5e,
	0x28, 0xa3, 0xde, 0xc6, 0x2a, 0xcb, 0x94, 0xdc, 0x43, 0x40, 0x5a, 0xf8, 0x13, 0xab, 0x74, 0xf0,
	0xdb, 0x87, 0xd6, 0xa5, 0xe6, 0xc5, 0x91, 0x5c, 0x28, 0xd2, 0x03, 0x5f, 0x24, 0xd4, 0x0b, 0xbd,
	0x61, 0x8d, 0xf9, 0x22, 0x21, 0x03, 0xa8, 0x17, 0x2a, 0xe5, 0xb4, 0x1e, 0x7a, 0xc3, 0xde, 0xa8,
	0xb7, 0xb7, 0xca, 0xda, 0x63, 0x2a, 0xe5, 0x0c, 0xbf, 0x11, 0x02, 0x75, 0x19, 0x65, 0x9c, 0x6e,
	0x86, 0xde, 0xb0, 0xcd, 0x30, 0x26, 0x7d, 0xa8, 0x69, 0x7e, 0x4b, 0x1b, 0xa1, 0x37, 0x6c, 0x31,
	0x1b, 0x92, 0x6d, 0xd8, 0xcc, 0xaf, 0x95, 0xe4, 0xb4, 0x89, 0x32, 0x07, 0x2c, 0xcb, 0xb3, 0x48,
	0xa4, 0xb4, 0xe5, 0x58, 0x04, 0xe4, 0x29, 0x34, 0x74, 0x7c, 0xad, 0x54, 0x4a, 0xdb, 0x48, 0x57,
	0x88, 0xbc, 0x04, 0x48, 0x23, 0x6d, 0xe6, 0xa9, 0x5a, 0x0a, 0x49, 0x01, 0xbb, 0x6c, 0x5b, 0xe6,
	0xd8, 0x12, 0x36, 0x2d, 0x2e, 0x78, 0x64, 0x38, 0x0d, 0xf0, 0x53, 0x85, 0x08, 0x85, 0x66, 0x14,
	0xc7, 0xaa, 0x94, 0x86, 0xfa, 0x58, 0x6f, 0x05, 0xc9, 0x73, 0x68, 0xe5, 0x91, 0xd6, 0x3f, 0x55,
	0x91, 0xd0, 0x1a, 0x7e, 0xba, 0xc3, 0x83, 0x0f, 0xd0, 0x3b, 0x2f, 0xd4, 0x55, 0xca, 0xb3, 0xe9,
	0x6d, 0x94, 0xe5, 0x29, 0x36, 0x2b, 0x64, 0x5e, 0x1a, 0xf4, 0xa7, 0xcd, 0x1c, 0xb0, 0xaf, 0xaa,
	0xd2, 0x58, 0xda, 0x15, 0xaf, 0xd0, 0xe0, 0x1d, 0x6c, 0x55, 0xf9, 0xdf, 0xca, 0x64, 0xc9, 0x8f,
	0x45, 0x26, 0x8c, 0xf5, 0xca, 0x88, 0x8c, 0x57, 0x15, 0x30, 0xb6, 0x5e, 0x65, 0x3c, 0xab, 0xb2,
	0x6d, 0x38, 0xf8, 0x53, 0x83, 0x66, 0x95, 0xbb, 0xb6, 0x91, 0x6d, 0xd8, 0x34, 0xc2, 0xa4, 0xbc,
	0xd2, 0x3b, 0x40, 0x42, 0x08, 0x12, 0xae, 0xe3, 0x42, 0xe4, 0x46, 0x28, 0x59, 0xcd, 0xf2, 0x90,
	0xc2, 0x3a, 0x12, 0xf7, 0xd8, 0x66, 0xbe, 0x90, 0xf6, 0x55, 0x55, 0x9a, 0x6a, 0x69, 0x36, 0xb4,
	0xbd, 0x5d, 0x0b, 0x69, 0x70, 0x69, 0x6d, 0x86, 0x31, 0xf9, 0x08, 0x4f, 0x84, 0x9c, 0xab, 0xd2,
	0xcc, 0xb9, 0x33, 0x41, 0xd3, 0x66, 0x58, 0x1b, 0x06, 0x23, 0x7a, 0x7f, 0x0a, 0x8f, 0x5d, 0x62,
	0x5d, 0x21, 0xcf, 0x4a, 0x53, 0x21, 0x4d, 0xde, 0x43, 0x70, 0x63, 0xe7, 0x9f, 0xa7, 0xd6, 0x00,
	0xdc, 0x73, 0x30, 0x7a, 0xb1, 0x96, 0x7d, 0xef, 0x11, 0x83, 0x9b, 0xc7, 0x7e, 0x45, 0x4b, 0x4d,
	0xdb, 0x61, 0x0d, 0xfd, 0x8a, 0x96, 0x9a, 0x1c, 0x00, 0x24, 0x62, 0xb1, 0x10, 0x71, 0x5a, 0x9a,
	0x5f, 0x78, 0x05, 0xbd, 0xff, 0x14, 0x9c, 0xdc, 0x49, 0xd8, 0x03, 0x39, 0xd9, 0x81, 0x40, 0x97,
	0x57, 0x99, 0x30, 0x73, 0xdc, 0x83, 0x3b, 0x14, 0x70, 0xd4, 0xcc, 0x6e, 0x63, 0x07, 0x82, 0x28,
	0x8e, 0x79, 0x5e, 0x09, 0x3a, 0x4e, 0xe0, 0x28, 0x14, 0x0c, 0xa0, 0xeb, 0x06, 0x12, 0x72, 0xbe,
	0x10, 0x29, 0xa7, 0xdd, 0xd0, 0x1b, 0x76, 0x98, 0x9b, 0xf2, 0x48, 0x7e, 0x11, 0x29, 0x27, 0xaf,
	0xa0, 0xe7, 0x34, 0xd6, 0x39, 0x14, 0xf5, 0x50, 0xd4, 0x41, 0xf6, 0xac, 0x34, 0x56, 0x35, 0x28,
	0xa1, 0x73, 0x81, 0x0f, 0x33, 0x1e, 0xab, 0x22, 0x21, 0xaf, 0xa1, 0x99, 0xbb, 0xe6, 0x71, 0xdf,
	0xc1, 0x68, 0x6b, 0x6d, 0x2a, 0xb6, 0x52, 0xfc, 0x3b, 0x88, 0xbf, 0x36, 0xc8, 0x33, 0x68, 0x0a,
	0x3d, 0xb7, 0xe7, 0x8c, 0xe7, 0xd0, 0x62, 0x0d, 0xa1, 0xcf, 0x23, 0xad, 0x77, 0xdf, 0x40, 0xdd,
	0xfe, 0x7b, 0x49, 0x00, 0xcd, 0x8b, 0xd9, 0xe5, 0x64, 0x7a, 0x3a, 0xeb, 0x6f, 0x58, 0x30, 0x9b,
	0x8e, 0x3f, 0x1f, 0x4e, 0x59, 0xdf, 0xb3, 0xe0, 0x64, 0x7c, 0x3a, 0xfe, 0x3a, 0x65, 0x7d, 0x7f,
	0x77, 0xff, 0xee, 0x8e, 0xef, 0x2d, 0x25, 0x2d, 0xa8, 0x4f, 0xc7, 0x17, 0xdf, 0xfb, 0x1b, 0x04,
	0xa0, 0x71, 0x32, 0x9d, 0x1c, 0x5d, 0x9e, 0xf4, 0x3d, 0xcb, 0x1e, 0x8e, 0xd9, 0xa4, 0xef, 0x7f,
	0xea, 0xfe, 0x08, 0x96, 0xea, 0x60, 0xd5, 0xfd, 0x55, 0x03, 0xa3, 0xfd, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x6f, 0x0c, 0xc3, 0xb0, 0x8a, 0x04, 0x00, 0x00,
}
